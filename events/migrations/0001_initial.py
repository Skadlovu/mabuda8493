# Generated by Django 5.0.1 on 2024-02-06 11:21

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(default='events', max_length=100)),
                ('slug', models.SlugField(default='')),
                ('number_of_events', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(default='city', max_length=100)),
                ('slug', models.SlugField(default='')),
                ('number_of_events', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('title', models.CharField(max_length=100, unique=True)),
                ('thumb', models.ImageField(upload_to='thumbs', verbose_name='Event poster')),
                ('portrait', models.ImageField(blank=True, null=True, upload_to='potrait')),
                ('landscape', models.ImageField(blank=True, null=True, upload_to='landscape')),
                ('description', models.TextField(max_length=600)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('views', models.PositiveBigIntegerField(blank=True, default=0)),
                ('event_date', models.DateField()),
                ('event_time', models.TimeField()),
                ('entry_fee', models.FloatField(default=0)),
                ('event_venue', models.CharField(max_length=100)),
                ('slug', models.SlugField(default='', max_length=100)),
                ('status', models.BooleanField(default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('attending', models.ManyToManyField(blank=True, related_name='events_attending', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.category', verbose_name='Category')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='events.city', verbose_name='City')),
                ('comments', models.ManyToManyField(blank=True, related_name='event_comments', to='events.comment')),
                ('likes', models.ManyToManyField(blank=True, related_name='event_likes', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'ordering': ['upload_date'],
            },
        ),
        migrations.CreateModel(
            name='EventReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratings', models.IntegerField(default=0, help_text='Enter a rating between 1 and 5. Five being the best and 0 being the worse')),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True, default='')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='events.event', verbose_name='Event')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'ordering': ['event__event_date'],
            },
        ),
    ]
